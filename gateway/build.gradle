apply plugin: 'java'
apply plugin: 'application'

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = 1.8

//jar {
//    manifest {
//        attributes 'Main-Class': 'ua.in.smartjava.spark.Gateway'
//        attributes 'Created-By': 'Tsypuk Roman'
//        attributes 'Implementation-Title': 'Smart software gateway for AWS Alexa'
//    }
//    from {
//        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}

mainClassName = 'ua.in.smartjava.spark.Gateway'
version = '0.0.10'

sourceSets {
    main.java.srcDirs 'src/main'
    test.java.srcDirs 'src/test'
}

dependencies {
    implementation('com.sparkjava:spark-core:2.7.1')
    implementation('org.slf4j:slf4j-simple:1.7.25')
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation('com.google.code.gson:gson:2.8.2')
    implementation('org.yaml:snakeyaml:1.19')

    implementation('org.mongodb:mongo-java-driver:2.4')

    testImplementation 'junit:junit:4.12'
}

task npmInstall(type: Exec) {
    workingDir 'src/main/react'
    commandLine 'npm', 'install'
}

task npmBuild(type: Exec, dependsOn: npmInstall) {
    workingDir 'src/main/react'
    commandLine 'npm', 'run', 'build'
}

task reactToJar(type: Copy, dependsOn: [npmBuild, processResources]) {
    clean {
        delete 'src/main/resources/webapp'
    }
    from 'src/main/react/build'
    into 'src/main/resources/webapp'
}

compileJava.dependsOn reactToJar

mainClassName = 'ua.in.smartjava.spark.Gateway'

jar {
    manifest {
        attributes(
                'Main-Class': 'ua.in.smartjava.spark.Gateway'
        )
    }
}